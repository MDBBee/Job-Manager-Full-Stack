openapi: 3.1.0
info:
  title: API-job
  contact: {}
  version: "1.0"
servers:
  - url: https://api-job-1.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: register a user
      operationId: registerauser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/registerauserrequest"
                - examples:
                    - name: Phil
                      email: phil@gmail.com
                      password: "123456"
              contentMediaType: application/json
            example:
              name: Phil
              email: phil@gmail.com
              password: "123456"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
    parameters: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: login a user
      operationId: loginauser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/loginauserrequest"
                - examples:
                    - email: phil@gmail.com
                      password: "123456"
              contentMediaType: application/json
            example:
              email: phil@gmail.com
              password: "123456"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
    parameters: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: create a job.
      operationId: createajob.
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/createajob.request"
                - examples:
                    - company: Toyota
                      position: design Engineer
              contentMediaType: application/json
            example:
              company: Toyota
              position: design Engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: Get all jobs by a user
      operationId: Getalljobsbyauser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    parameters: []
  /jobs/{id}:
    get:
      tags:
        - Jobs
      summary: Get a single job
      operationId: Getasinglejob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update job
      operationId: Updatejob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdatejobRequest"
                - examples:
                    - company: Fidelity Bank
                      position: Back-end Engineer
              contentMediaType: application/json
            example:
              company: Fidelity Bank
              position: Back-end Engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete a job
      operationId: Deleteajob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    parameters: []
components:
  schemas:
    registerauserrequest:
      title: registerauserrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      examples:
        - name: Phil
          email: phil@gmail.com
          password: "123456"
    loginauserrequest:
      title: loginauserrequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      examples:
        - email: phil@gmail.com
          password: "123456"
    createajob.request:
      title: createajob.request
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      examples:
        - company: Toyota
          position: design Engineer
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      examples:
        - company: Fidelity Bank
          position: Back-end Engineer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
  - name: Jobs
